'use client'

import { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'

export function useAuth() {
  const [error, setError] = useState<string | null>(null)
  const [isLoading, setIsLoading] = useState(true)
  const router = useRouter()

  useEffect(() => {
    // Check authentication status on mount
    const checkAuth = async () => {
      const isAuthenticated = localStorage.getItem('isAuthenticated')
      if (isAuthenticated === 'true') {
        router.push('/dashboard')
      } else {
        setIsLoading(false)
      }
    }
    checkAuth()
  }, [router])

  const login = async (username: string, password: string) => {
    setIsLoading(true)
    setError(null)

    try {
      // Simulating an API call
      await new Promise(resolve => setTimeout(resolve, 1000))

      if (username === 'admin' && password === 'admin') {
        localStorage.setItem('isAuthenticated', 'true')
        router.push('/dashboard')
      } else {
        setError('Invalid username or password')
      }
    } catch (err) {
      setError('An error occurred. Please try again.')
    } finally {
      setIsLoading(false)
    }
  }

  const logout = () => {
    localStorage.removeItem('isAuthenticated')
    router.push('/login')
  }

  return { login, logout, error, isLoading }
}
